{% if HasOperations -%}
{% if GenerateClientInterfaces -%}
{% if ExportTypes %}export {% endif %}interface I{{ Class }} {
{%     for operation in Operations -%}
    {% template Client.Method.Documentation %}
    {{ operation.MethodAccessModifier }}{{ operation.ActualOperationName }}({% for parameter in operation.Parameters %}{{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}{% if parameter.IsLast == false %}, {% endif %}{% endfor %}): Promise<{{ operation.ResultType }}>;
{%     endfor -%}}
{% endif -%}

{% if UseAureliaHttpInjection -%}
@inject({% if HasConfigurationClass %}{{ ConfigurationClass }}, {% endif %}String, HttpClient)
{% endif -%}
{% if ExportTypes %}export {% endif %}class {{ Class }} {% if HasBaseClass %}extends {{ BaseClass }} {% endif %}{% if GenerateClientInterfaces %}implements I{{ Class }} {% endif %}{
{% if HasExtensionCode -%}
    {{ ExtensionCode }}
{% endif -%}
{% for operation in Operations -%}
    {% template Client.Method.Documentation %}
    {{ operation.MethodAccessModifier }}{{ operation.ActualOperationName }} = ({% for parameter in operation.Parameters %}{{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }},{% if parameter.IsLast %} {% endif %}{% endfor %}loadable?: Loadable<{{ operation.ResultType }}>) =>
        Api.{{operation.HttpMethodUpper | downcase }}("{{ operation.Path | remove_first: "api" }}", {% if operation.HasBody -%}{{ operation.ContentParameter.VariableName }}{% else -%}undefined{% endif -%}, loadable);
    
{% endfor -%}
}
{% endif -%}